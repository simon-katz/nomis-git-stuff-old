#!/bin/bash

#### A version of `git push` that checks whether the current commit is an
#### "apply-local-formatting" commit, and, if so, pushes the previous commit.

#### We need this because Git has no post-push hook.
#### - See https://stackoverflow.com/a/3812238 for an alternative.

THIS_DIR=$(dirname "${BASH_SOURCE[0]}")

source ${THIS_DIR}/../src/bash/common/git-funs.sh

if [[ $(git log --format=%s -n 1) != apply-local-formatting* ]]; then
    echo "Doing a normal push."
    git push $*
else
    echo "Pushing the previous commit."
    ## Stash everything temporarily.
    ## Note that this doesn't create a stash if there are no changes.
    THE_CURRENT_COMMIT_SHA=$(git rev-parse HEAD)
    STASH_NAME=$(git__return_safekeeping_stash_name "_nomis-cljfmt-with-local-formatting-v0" "special-push" ${THE_CURRENT_COMMIT_SHA})
    git stash push \
        --quiet \
        --include-untracked \
        --message "${STASH_NAME}"

    ## Push the previous commit.
    git reset --hard HEAD~1
    git push $*
    git reset --hard ${THE_CURRENT_COMMIT_SHA}

    ## If we created a stash, pop it:
    TOP_STASH=$(git stash list | head -1)
    if [[ $TOP_STASH =~ ${STASH_NAME} ]]; then
        # Return to original state.
        git stash apply --quiet --index # TODO Change this to pop when are sure all is OK
    fi
fi
